struct SDL_Window;
struct SDL_Renderer;
struct SDL_Texture;
struct SDL_Surface;

void SDL_SetMainReady();
i32 SDL_Init(u32);
void SDL_Quit();
SDL_Window* SDL_CreateWindow(u8* title, i32 x, i32 y, i32 w, i32 h, u32 flags);
SDL_Renderer* SDL_CreateRenderer(SDL_Window* window, i32 index, u32 flags);
void SDL_DestroyRenderer(SDL_Renderer* renderer);
void SDL_DestroyWindow(SDL_Window* window);
i32 SDL_PollEvent(SDL_Event* event);
u32 SDL_GetMouseState(i32* x, i32* y);
u8 SDL_BUTTON(u8 X) {
	return cast(u8)(1 << (X - 1));
}
u8* SDL_GetError();
i32 SDL_SetRenderDrawColor(SDL_Renderer* renderer, u8 r, u8 g, u8 b, u8 a);
i32 SDL_SetRenderDrawBlendMode(SDL_Renderer* renderer, u32 blendMode);
i32 SDL_SetTextureColorMod(SDL_Texture* texture, u8 r, u8 g, u8 b);
i32 SDL_RenderDrawRect(SDL_Renderer* renderer, SDL_Rect* rect);
i32 SDL_RenderFillRect(SDL_Renderer* renderer, SDL_Rect* rect);

enum : u8 {
	SDL_BUTTON_LEFT = 1,
	SDL_BUTTON_MIDDLE = 2,
	SDL_BUTTON_RIGHT = 3,
	SDL_BUTTON_X1 = 4,
	SDL_BUTTON_X2 = 5,
	SDL_BUTTON_LEFT_MASK = 1 << 0,
	SDL_BUTTON_MIDDLE_MASK = 1 << 1,
	SDL_BUTTON_RIGHT_MASK = 1 << 2,
	SDL_BUTTON_X1_MASK = 1 << 3,
	SDL_BUTTON_X2_MASK = 1 << 4,
}

enum SDL_BlendMode {
	SDL_BLENDMODE_NONE = 0x00000000,
	SDL_BLENDMODE_BLEND = 0x00000001,
	SDL_BLENDMODE_ADD = 0x00000002,
	SDL_BLENDMODE_MOD = 0x00000004
}
struct SDL_Event
{
	u32 type;
	u8[52] padding;
}

enum SDL_EventType : u32 {
	SDL_FIRSTEVENT = 0,
	SDL_QUIT = 0x100,
	SDL_KEYDOWN = 0x300,
	SDL_KEYUP = 0x301,
}

struct SDL_KeyboardEvent {
	u32 type;
	u32 timestamp;
	u32 windowID;
	u8 state;
	u8 repeat;
	u8 padding2;
	u8 padding3;
	SDL_Keysym keysym;
}

struct SDL_Keysym {
	u32 scancode;
	u32 sym;
	u16 mod;
	u32 unicode;
}

enum SDL_Scancode : u32 {
	SDL_SCANCODE_A = 4,
	SDL_SCANCODE_D = 7,
	SDL_SCANCODE_S = 22,
	SDL_SCANCODE_W = 26,
	SDL_SCANCODE_ESCAPE = 41,
	SDL_SCANCODE_LEFTBRACKET = 47,
	SDL_SCANCODE_RIGHTBRACKET = 48,
}

enum u32 SDL_INIT_VIDEO = 0x00000020;
enum u32 SDL_RENDERER_SOFTWARE = 0x00000001;
enum u32 SDL_RENDERER_ACCELERATED = 0x00000002;
enum u32 SDL_RENDERER_PRESENTVSYNC = 0x00000004;
enum u32 SDL_RENDERER_TARGETTEXTURE = 0x00000008;
enum i32 SDL_WINDOWPOS_UNDEFINED = 0x1FFF0000;
enum u32 SDL_WINDOW_SHOWN = 0x00000004;

SDL_Texture* SDL_CreateTextureFromSurface(SDL_Renderer* renderer, SDL_Surface* surface);
void SDL_FreeSurface(SDL_Surface*);
void SDL_DestroyTexture(SDL_Texture*);
i32 SDL_RenderClear(SDL_Renderer*);
i32 SDL_RenderCopy(SDL_Renderer*, SDL_Texture*, SDL_Rect*, SDL_Rect*);
void SDL_RenderPresent(SDL_Renderer*);

struct SDL_Rect
{
	i32 x;
	i32 y;
	i32 w;
	i32 h;
}
